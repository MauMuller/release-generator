name: "Release generator"
author: "MauMuller"
description: "Create custom releases automatically based on your projects commits"

inputs:
  token:
    description: "Secrets to access project:"
    required: true

  end-tag:
    type: string
    description: "Get final range tag:"
    required: true

  start-tag:
    type: string
    description: "Get start range tag:"
    required: false

  template:
    type: string
    description: "Template for release generator"
    required: true

runs:
  using: "composite"
  steps:
    - id: end-tag
      name: Get typed END tag
      shell: bash
      env:
        END_TAG: ${{ inputs.end-tag }}
      run: |
        if [ ! "$(git tag | grep -Eio "^$END_TAG$")" ]
          then 
            echo -e "\nTag typed ($END_TAG) wasnt find at project tag's list.\n"
            exit 1
        fi

        echo "END_TAG=$END_TAG" >> "$GITHUB_OUTPUT"

    - id: start-tag
      name: Get typed START tag
      shell: bash
      env:
        START_TAG: ${{ inputs.start-tag }}
        GH_TOKEN: ${{ inputs.token }}
      run: |
        if [ ! "$START_TAG" ]
          then            
            LATEST_RELEASE_TAG="$(gh release list -O desc --json tagName --jq ".[].tagName" -L 1)"
            echo "$LATEST_RELEASE_TAG"
            START_TAG="$(git tag --sort version:refname | grep -A 1 "$(echo "$LATEST_RELEASE_TAG")" | tail -n 1)"
        fi
        
        if [ ! "$(git tag | grep -Eio "^$START_TAG$")" ]
          then 
            echo -e "\nTag typed ($START_TAG) wasnt find at project tag's list.\n"
            exit 1
        fi
        
        echo "START_TAG=$START_TAG" >> "$GITHUB_OUTPUT"

    - name: Set composite files to GITHUB OUTPUT
      shell: bash
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Convert TEMPLATES into data
      id: convert-templates-to-data
      shell: bash
      env:
        TEMPLATE: ${{ inputs.TEMPLATE }}
        END_TAG: ${{ steps.end-tag.outputs.END_TAG }}
        START_TAG: ${{ steps.start-tag.outputs.START_TAG }}
      run: |
        git config --global --add safe.directory "$DIR"
        git config set --global user.name "Github's bot"
        git config set --global user.email "<>"

        JSON_TEMPLATE=$(git log --format="$(cat ./src/git.json)" $START_TAG ^$END_TAG)

        docker run \
        --rm \
        -w /app \
        --mount type=bind,src=./src,dst=/app \
        composer/composer:2.8.10 sh -c "
          composer require twig/twig:^3.0;
          composer dump-autoload;
          php -f ./twig.php '$TEMPLATE' '$JSON_TEMPLATE'
        "

        MARKDOWN_CONTENT="$(cat ./src/output.md)"

        if [ ! "$MARKDOWN_CONTENT" ]
          then 
            echo -e "\nIt wasnt possible to get MARKDOWN FILE generator.\n"
            exit 1
        fi

        echo "MD_TEMPLATE=$MARKDOWN_CONTENT" >> "$GITHUB_OUTPUT"
       
    - name: Create release
      shell: bash
      run: gh release create "$END_TAG" -n "$MD_TEMPLATE"
      env: 
        GH_TOKEN: ${{ inputs.token }}
        MD_TEMPLATE: ${{ steps.convert-templates-to-data.outputs.MD_TEMPLATE }}
        END_TAG: ${{ steps.end-tag.outputs.END_TAG }}
